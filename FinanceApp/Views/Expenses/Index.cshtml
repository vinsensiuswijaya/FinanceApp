@model IEnumerable<FinanceApp.Dtos.ExpenseDTO>

<div class="container p-4">
    <h2>My Expenses</h2>
    <p>
        <a asp-action="Create" class="btn btn-primary mb-4">Add New Expense</a>
    </p>

    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount $</td>
                    <td>@item.CategoryName</td>
                    <td>@item.Date.ToLocalTime().ToString("dd/MM/yyyy")</td>
                    <td style="width: 120px;">
                        <div class="d-flex gap-2">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                            <form method="post" asp-action="Delete" asp-route-id="@item.Id" 
                                onsubmit="return confirm('Are you sure you want to delete this expense?');"
                                class="d-inline p-0 m-0">
                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Expenses Overview</h2>
    <div class="d-flex align-items-center mb-3 justify-content-center">
        <canvas style="max-width: 450px; max-height: 450px;" id="myChart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.category),
                    datasets: [{
                        data: data.map(d => d.total),
                    }]
                }
            });
        });

</script>