@model IEnumerable<FinanceApp.Models.Expense>

<h2>My Expenses</h2>
<div class="container">
    <a asp-action="Create" class="btn btn-success">Add New Expense</a>
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                @* <th>ID</th> *@
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    @* <td>@item.Id</td> *@
                    <td>@item.Description</td>
                    <td>@item.Amount $</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToLocalTime().ToString("yyyy-MM-dd")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
                        <form asp-action="Delete" asp-route-itemid="@item.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<div style="width: 100%; display:flex; flex-direction: column; align-items: center; flex-wrap: wrap;">
    <h2>Expenses Overview</h2>
    <canvas style="max-width: 450px; max-height: 450px;" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.category),
                    datasets: [{
                        data: data.map(d => d.total),
                    }]
                }
            });
        });

</script>